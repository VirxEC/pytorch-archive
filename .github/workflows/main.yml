name: Publish

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: robinraju/release-downloader@v1
      id: download_packs
      continue-on-error: true
      with:
        latest: true
        fileName: '*_x86_64-windows.tar.xz'

    - name: Extract archives
      if: ${{ steps.download_packs.outcome == 'success' }}
      shell: bash
      run: |
        mkdir -p torch-archive-old
        for file in *.tar.xz; do tar --transform 's|^[^/]*|torch-archive-old|' -xf "$file"; done

    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install PyTorch
      run: |
        pip install uv
        uv venv
        uv pip install torch --index-url https://download.pytorch.org/whl/cpu

    - name: Extract PyTorch & deps
      run: |
        mkdir torch-archive
        move ".venv\Lib\site-packages\filelock" "torch-archive\"
        move ".venv\Lib\site-packages\fsspec" "torch-archive\"
        move ".venv\Lib\site-packages\jinja2" "torch-archive\"
        move ".venv\Lib\site-packages\markupsafe" "torch-archive\"
        move ".venv\Lib\site-packages\mpmath" "torch-archive\"
        move ".venv\Lib\site-packages\networkx" "torch-archive\"
        move ".venv\Lib\site-packages\sympy" "torch-archive\"
        move ".venv\Lib\site-packages\torch" "torch-archive\"
        move ".venv\Lib\site-packages\torchgen" "torch-archive\"
        move ".venv\Lib\site-packages\typing_extensions.py" "torch-archive\"

    - name: Download bob
      if: ${{ steps.download_packs.outcome == 'success' }}
      uses: robinraju/release-downloader@v1
      with:
        repository: 'swz-git/bob'
        latest: true
        fileName: 'bob_*_x86_64-pc-windows-gnu.zip'
        extract: true

    - name: Generate platform diff
      if: ${{ steps.download_packs.outcome == 'success' }}
      shell: cmd
      run: bob.exe diff torch-archive-old torch-archive > patch_x86_64-windows.bobdiff

    - name: Compress archive
      shell: bash
      run: tar cf - torch-archive | xz -9 > botpack_x86_64-windows.tar.xz

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: x86_64-windows
        path: |
          patch_x86_64-windows.bobdiff
          botpack_x86_64-windows.tar.xz

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: robinraju/release-downloader@v1
      id: download_packs
      continue-on-error: true
      with:
        latest: true
        fileName: '*_x86_64-linux.tar.xz'

    - name: Extract archives
      if: ${{ steps.download_packs.outcome == 'success' }}
      shell: bash
      run: |
        mkdir -p torch-archive-old
        for file in *.tar.xz; do tar --transform 's|^[^/]*|torch-archive-old|' -xf "$file"; done

    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install PyTorch
      run: |
        pip install uv
        uv venv
        uv pip install torch --index-url https://download.pytorch.org/whl/cpu

    - name: Extract PyTorch & deps
      run: |
        mkdir torch-archive
        mv .venv/lib/python3.12/site-packages/filelock/ \
        .venv/lib/python3.12/site-packages/fsspec/ \
        .venv/lib/python3.12/site-packages/jinja2/ \
        .venv/lib/python3.12/site-packages/markupsafe/ \
        .venv/lib/python3.12/site-packages/mpmath/ \
        .venv/lib/python3.12/site-packages/networkx/ \
        .venv/lib/python3.12/site-packages/sympy/ \
        .venv/lib/python3.12/site-packages/torch/ \
        .venv/lib/python3.12/site-packages/torchgen/ \
        .venv/lib/python3.12/site-packages/typing_extensions.py \
        ./torch-archive/

    - name: Download bob
      if: ${{ steps.download_packs.outcome == 'success' }}
      uses: robinraju/release-downloader@v1
      with:
        repository: 'swz-git/bob'
        latest: true
        fileName: 'bob_*_x86_64-unknown-linux-musl.zip'
        extract: true

    - run: chmod +x bob
      if: ${{ steps.download_packs.outcome == 'success' }}

    - name: Generate platform diff
      if: ${{ steps.download_packs.outcome == 'success' }}
      run: ./bob diff torch-archive-old torch-archive > patch_x86_64-linux.bobdiff

    - name: Compress archive
      run: tar cf - torch-archive | xz -9 > botpack_x86_64-linux.tar.xz

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: x86_64-linux
        path: |
          patch_x86_64-linux.bobdiff
          botpack_x86_64-linux.tar.xz

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Determine next tag
        id: get_tag
        run: |
          git fetch --tags

          # Get the latest tag in the format r-N
          latest_tag=$(git tag | grep -E '^r-[0-9]+$' | sort -V | tail -n 1)

          # Extract the numeric part N from r-N
          if [[ $latest_tag =~ ^r-([0-9]+)$ ]]; then
            latest_number=${BASH_REMATCH[1]}
          else
            latest_number=0
          fi

          new_number=$((latest_number + 1))
          new_tag="r-${new_number}"

          echo "Latest tag: $latest_tag"
          echo "New tag: $new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Publish to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_tag.outputs.new_tag }}
          files: |
            botpack_*.tar.xz
            patch_*.bobdiff
          body: "Platform-specific PyTorch files"
